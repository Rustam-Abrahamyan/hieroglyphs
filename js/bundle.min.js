(()=>{"use strict";const t=64,i=class{constructor(i,s,h,e){this.x=i,this.y=s,this.getTypeAndRotation(h),this.x0=0,this.x1=this.x0+t,this.y0=0,this.y1=this.y0+t,this.xm=(this.x0+this.x1)/2,this.ym=(this.y0+this.y1)/2,this.x13=(5*this.x0+3*this.x1)/8,this.x23=(3*this.x0+5*this.x1)/8,this.y13=(5*this.y0+3*this.y1)/8,this.y23=(3*this.y0+5*this.y1)/8,this.canvas=document.createElement("canvas"),this.canvas.style.position="absolute",this.canvas.style.left=i*t+"px",this.canvas.style.top=s*t+"px",this.canvas.width=t,this.canvas.height=t,document.body.appendChild(this.canvas),this.context=this.canvas.getContext("2d"),this.context.linecap="round",this.context.strokeStyle=e,this.context.lineWidth=2,this.orient=0}getTypeAndRotation(t){switch(t){case 0:this.type=0,this.rotation=0;break;case 1:case 2:this.type=1,this.rotation=t-1;break;case 3:case 4:this.type=2,this.rotation=t-3;break;case 5:case 6:case 7:case 8:this.type=3,this.rotation=t-5;break;case 9:case 10:case 11:case 12:this.type=4,this.rotation=t-9}}makeCorner(t){return[[this.x0,this.y0],[this.x1,this.y0],[this.x1,this.y1],[this.x0,this.y1]][t]}makeMid(t){return[[this.xm,this.y0],[this.x1,this.ym],[this.xm,this.y1],[this.x0,this.ym]][t]}makeTiers(t){return[[this.x13,this.y0,this.x13,this.y1],[this.x1,this.y13,this.x0,this.y13],[this.x23,this.y1,this.x23,this.y0],[this.x0,this.y23,this.x1,this.y23]][t]}makeTiers2(t){return[[this.x23,this.y0,this.x23,this.y1],[this.x1,this.y23,this.x0,this.y23],[this.x13,this.y1,this.x13,this.y0],[this.x0,this.y13,this.x1,this.y13]][t]}corner1(t){let[i,s]=this.makeCorner(t),h=t*(Math.PI/2);this.context.beginPath(),this.context.arc(i,s,24,0+h,Math.PI/2+h),this.context.stroke()}corner2(t){let[i,s]=this.makeCorner(t),h=t*(Math.PI/2);this.context.beginPath(),this.context.arc(i,s,40,0+h,Math.PI/2+h),this.context.stroke()}mid(t){let[i,s]=this.makeMid(t),h=t*(Math.PI/2);this.context.beginPath(),this.context.arc(i,s,8,h,Math.PI+h),this.context.stroke()}vertical1(t){let[i,s,h,e]=this.makeTiers(t);this.context.beginPath(),this.context.moveTo(i,s),this.context.lineTo(h,e),this.context.stroke()}vertical2(t){let[i,s,h,e]=this.makeTiers2(t);this.context.beginPath(),this.context.moveTo(i,s),this.context.lineTo(h,e),this.context.stroke()}draw(){switch(this.type){case 0:this.corner1(0),this.corner1(1),this.corner1(2),this.corner1(3);break;case 1:this.corner1(this.rotation),this.corner2(this.rotation),this.corner1(2^this.rotation),this.corner2(2^this.rotation);break;case 2:this.mid(1^this.rotation),this.mid(3^this.rotation),this.vertical1(this.rotation),this.vertical2(this.rotation);break;case 3:this.mid((this.rotation+3)%4),this.vertical1(this.rotation),this.corner1((this.rotation+1)%4),this.corner1(2^this.rotation);break;case 4:this.corner1(this.rotation),this.corner2(this.rotation),this.mid((this.rotation+1)%4),this.mid(2^this.rotation)}}},s=(t,i,s)=>{let h=t+Math.random()*(i-t);return s?Math.floor(h):h};window.onload=()=>{new class{grid=[];orients=[];countX;countY;periodX;periodY;constructor(){this.init(),this.animate(),window.addEventListener("click",this.init.bind(this)),window.addEventListener("resize",this.init.bind(this))}init(){const h=`hsl(${s(0,360)}, 100%, 60%)`,e=window.innerWidth,o=window.innerHeight;this.countX=Math.ceil(e/t),this.countY=Math.ceil(o/t),this.periodX=s(5,10,!0),this.periodY=s(5,10,!0);const r=[];this.orients=[];for(let t=0;t<this.periodY;++t){const i=[];this.orients[t]=[];for(let h=0;h<this.periodX;++h)i[h]=s(0,12,!0),this.orients[t][h]={orient:0,squares:[]};r[t]=i}document.body.innerHTML="",this.grid=[];for(let t=0;t<this.countY;++t){this.grid[t]=[];for(let s=0;s<this.countX;++s){let e=(s+2*Math.floor(t/this.periodY))%this.periodX,o=t%this.periodY;this.grid[t][s]=new i(s,t,r[o][e],h),this.orients[o][e].squares.push([s,t])}}this.drawAll()}drawAll(){for(let t=0;t<this.countY;++t)for(let i=0;i<this.countX;++i)this.grid[t][i].draw()}animate(){for(let t=0;t<3;++t){let t=s(0,this.periodX,!0),i=s(0,this.periodY,!0),h=this.orients[i][t],e=`rotate(${90*++h.orient}deg)`;h.squares.forEach((t=>{this.grid[t[1]][t[0]].canvas.style.transform=e}))}setTimeout((()=>{this.animate()}),3e3)}}}})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,